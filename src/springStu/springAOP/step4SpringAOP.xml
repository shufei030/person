<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
        
        <bean id="helloWorldImpl1" class="springStu.springAOP.step2.HelloWorldImpl1" />
        <bean id="helloWorldImpl2" class="springStu.springAOP.step2.HelloWorldImpl2" />
        <bean id="timeHandler" class="springStu.springAOP.step3.TimeHandler" />
        <bean id="logHandler" class="springStu.springAOP.step6.LogHandler"/>
        <!-- 要想让logHandler在timeHandler前使用有两个办法：
		（1）aspect里面有一个order属性，order属性的数字就是横切关注点的顺序		
		（2）把logHandler定义在timeHandler前面，Spring默认以aspect的定义顺序作为织入顺序 
		-->
		
		<!-- 2、我只想织入接口中的某些方法 修改一下pointcut的expression就好了：表示timeHandler只会织入HelloWorld接口print开头的方法，logHandler只会织入HelloWorld接口do开头的方法 -->
        <aop:config>
            <aop:aspect id="time" ref="timeHandler" order="1">
                <aop:pointcut id="addAllMethod" expression="execution(* springStu.springAOP.step1.HelloWorld.print*(..))" />
                <aop:before method="printTime" pointcut-ref="addAllMethod" />
                <aop:after method="printTime" pointcut-ref="addAllMethod" />
            </aop:aspect>
            <aop:aspect id="log" ref="logHandler" order="2">
            	<aop:pointcut id="printLog" expression="execution(* springStu.springAOP.step1.HelloWorld.do*(..)))" />
            	<aop:before method="LogBefore" pointcut-ref="printLog"/>
            	<aop:after method="LogAfter" pointcut-ref="printLog"/>
            </aop:aspect>
        </aop:config>
</beans>